/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

body {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
  line-height: 1.42;
  letter-spacing: 0.02em;
  color: #000000;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

html, body {
  width: 100%;
  height: 100%;
  font-size: 16px;
  min-height: 40.625rem;
  scroll-behavior: smooth; }
  @media screen and (max-width: 768px) {
    html, body {
      font-size: 15px; } }
  @media screen and (max-width: 667px) {
    html, body {
      font-size: 13px; } }

ul, ol {
  list-style: none;
  margin: 0;
  padding: 0; }

h1, h2, h3, p {
  padding: 0;
  margin: 0; }

* {
  box-sizing: border-box; }

a, button {
  text-decoration: none;
  display: block;
  margin: 0;
  padding: 0;
  background: none;
  position: relative;
  border: none;
  outline: none;
  color: #ffffff; }
  a:hover, button:hover {
    cursor: pointer; }

textarea {
  resize: none; }

input,
textarea,
select {
  border: 1px solid #000000;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 18px;
  outline: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

section {
  width: 100%;
  position: relative; }

.container {
  width: 100%;
  max-width: 75rem;
  margin: 0 auto;
  position: relative; }

.btn {
  display: inline-block;
  min-width: 10.9375rem;
  font-weight: 500;
  font-size: 16px;
  font-size: 1rem;
  font-style: italic;
  text-align: left;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
  outline: none;
  padding: 0.9375rem 2.1875rem;
  margin-bottom: 12px;
  -webkit-transform: skew(-20deg);
      -ms-transform: skew(-20deg);
          transform: skew(-20deg);
  position: relative; }
  .btn::before {
    content: '';
    position: absolute;
    display: inline-block;
    height: 6px;
    width: 6px;
    right: 30px;
    top: calc(50% - 2px);
    border-style: solid;
    border-width: 2px 2px 0 0;
    border-color: #ffffff;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg); }
  .btn span {
    display: inline-block;
    -webkit-transform: skew(20deg);
        -ms-transform: skew(20deg);
            transform: skew(20deg); }
  .btn--green {
    color: #ffffff;
    background-color: #1b1d17; }
  .btn--red {
    color: #ffffff;
    background-color: #fc0014; }
    .btn--red::before {
      border-color: #ffffff; }
  .btn--white {
    color: #1b1d17;
    background-color: #ffffff; }
    .btn--white::before {
      border-color: #fc0014; }
  .btn--big {
    min-width: 340px;
    padding-right: 60px; }

.text-red {
  color: #fc0014; }

.section-title {
  font-size: 40px;
  font-size: 2.5rem;
  color: #1b1d17;
  text-transform: uppercase;
  font-weight: 700;
  -webkit-transform: skew(-12deg);
      -ms-transform: skew(-12deg);
          transform: skew(-12deg); }

.header {
  background-color: #ffffff;
  position: relative; }

.header-block {
  display: -webkit-box;
  display: flex;
  padding: 10px 0; }

.logo {
  height: 40px;
  width: auto;
  position: relative;
  margin-right: 1.5625rem; }
  .logo__img {
    max-height: 100%;
    width: auto; }

.nav__list {
  padding: 0 0.3125rem; }

.nav__list {
  display: -webkit-box;
  display: flex;
  height: 100%;
  -webkit-box-align: center;
          align-items: center; }

.nav__list_item {
  padding: 5px 1.25rem; }

.nav__list_link {
  font-size: 14px;
  font-size: 0.875rem;
  color: #1b1d17;
  -webkit-transform: skew(-12deg);
      -ms-transform: skew(-12deg);
          transform: skew(-12deg); }

.hero {
  box-shadow: 0px 11px 10px -10px rgba(50, 50, 50, 0.75);
  z-index: 0; }

.hero__info {
  position: absolute;
  left: 77%;
  top: 0;
  -webkit-transform: skew(-12deg);
      -ms-transform: skew(-12deg);
          transform: skew(-12deg); }

.info__item_link {
  font-size: 14px;
  font-size: 0.875rem;
  color: #1b1d17;
  font-style: italic;
  padding: 0 0 0 30px;
  margin-bottom: 15px; }
  .info__item_link:before {
    content: '';
    position: absolute;
    width: 22px;
    height: 25px;
    left: 0;
    top: 50%;
    -webkit-transform: skew(12deg) translateY(-50%);
        -ms-transform: skew(12deg) translateY(-50%);
            transform: skew(12deg) translateY(-50%);
    background-repeat: no-repeat; }
  .info__item_link--save:before {
    background-image: url(../images/icons/save.png); }
  .info__item_link--diller:before {
    background-image: url(../images/icons/map.png);
    left: 3px; }
  .info__item_link--test:before {
    background-image: url(../images/icons/rool.png); }

.hero-block {
  background-image: url(../images/bg/hero1.jpg);
  background-repeat: no-repeat;
  background-position: 90% center;
  background-size: 100%;
  padding-top: 36%; }

.hero-content {
  position: absolute;
  top: 3.125rem;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  max-width: 1150px;
  margin: 0 auto;
  width: 100%; }

.main-title {
  text-transform: uppercase;
  -webkit-transform: skew(-12deg);
      -ms-transform: skew(-12deg);
          transform: skew(-12deg);
  font-weight: 900;
  font-size: 50px;
  font-size: 3.125rem;
  line-height: 1.2;
  margin-bottom: 10px; }

.hero-block__btn {
  padding-right: 10%;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }
  .hero-block__btn .btn {
    max-width: 345px; }

.hero__timer {
  position: absolute;
  bottom: 3%;
  left: 39%;
  max-width: 1000px;
  width: 100%; }

.timer {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.timer__row {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: end;
          align-items: flex-end; }

.counter {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 50%; }

.timer__text {
  font-weight: 700;
  font-style: italic;
  padding: 10px 25px;
  -webkit-transform: skew(-12deg);
      -ms-transform: skew(-12deg);
          transform: skew(-12deg); }

.counter__item {
  position: relative;
  padding: 0 20px; }
  .counter__item_num {
    font-style: italic;
    font-weight: 900;
    font-size: 50px;
    font-size: 3.125rem;
    color: #1b1d17; }
  .counter__item_text {
    font-style: italic;
    font-weight: 300;
    font-size: 14px;
    font-size: 0.875rem;
    color: #b9b9b9; }
  .counter__item:first-child::after {
    padding-left: 0; }
  .counter__item:not(:last-child)::after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    width: 1px;
    height: 20px;
    background: #b9b9b9;
    -webkit-transform: skew(-12deg);
        -ms-transform: skew(-12deg);
            transform: skew(-12deg); }

.more {
  padding: 25px 0; }

.more-wrap {
  margin-bottom: 3.125rem; }

.more__block {
  display: -webkit-box;
  display: flex; }

.more-item {
  height: 165px;
  width: 275px;
  margin: 10px 10px 0 0;
  -webkit-transform: skew(-21deg);
      -ms-transform: skew(-21deg);
          transform: skew(-21deg);
  overflow: hidden; }

.more-item__pic {
  height: 100%;
  width: 390px;
  background-repeat: no-repeat;
  background-size: auto 100%; }
  .more-item__pic--event {
    background-image: url(../images/content/more1.webp);
    -webkit-transform: skew(21deg) translateX(-20%);
        -ms-transform: skew(21deg) translateX(-20%);
            transform: skew(21deg) translateX(-20%);
    background-size: 110%; }
  .more-item__pic--detail {
    background-image: url(../images/content/more2.webp);
    -webkit-transform: skew(21deg) translateX(-20%);
        -ms-transform: skew(21deg) translateX(-20%);
            transform: skew(21deg) translateX(-20%);
    background-size: 110%; }
  .more-item__pic--hero {
    background-image: url(../images/content/more3.webp);
    -webkit-transform: skew(21deg) translateX(-23%);
        -ms-transform: skew(21deg) translateX(-23%);
            transform: skew(21deg) translateX(-23%);
    background-size: 110%; }
  .more-item__pic--video {
    background-image: url(../images/content/more4.webp);
    -webkit-transform: skew(21deg) translateX(-20%);
        -ms-transform: skew(21deg) translateX(-20%);
            transform: skew(21deg) translateX(-20%);
    background-size: 110%; }

.more-item__descript {
  position: absolute;
  bottom: 0;
  width: 100%;
  background-color: #1b1d17;
  color: #ffffff;
  padding: 0.75rem;
  text-align: center;
  font-size: 16px;
  font-size: 1rem; }
  .more-item__descript span {
    position: relative;
    padding-right: 5px;
    -webkit-transform: skew(21deg);
        -ms-transform: skew(21deg);
            transform: skew(21deg); }
    .more-item__descript span::before {
      content: '';
      position: absolute;
      display: inline-block;
      height: 6px;
      width: 6px;
      left: 100%;
      top: calc(50% - 3px);
      border-style: solid;
      border-width: 2px 2px 0 0;
      border-color: #ffffff;
      -webkit-transform: rotate(45deg);
          -ms-transform: rotate(45deg);
              transform: rotate(45deg);
      border-color: #fc0014; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
